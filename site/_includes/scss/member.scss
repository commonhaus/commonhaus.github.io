@use 'index' as *;
@use 'coffee-spinner' as *;

main.member {
  position: relative;

  .toaster {
    box-sizing: border-box;
    background-color: var(--bg-primary);
    position: fixed;
    width: 100%;
    height: 4rem;
    min-height: 4rem;
    z-index: 25;
    top: 0;
    left: 0;

    .callout {
      position: relative;
      width: calc(100% - 2rem - 10px);
      height: 3rem;
      min-height: 3rem;
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0;

      .callout-content {
        display: none;
      }
    }

    &.show {
      display: block;
    }

    &:not(.show) {
      display: none;
    }
  }

  a.close {
    position: absolute;
    top: 0;
    right: 0;
    padding: 1rem;
    cursor: pointer;
  }

  .hold {
    min-width: 250px;
    margin: 0 auto;
    text-align: center;
    box-sizing: border-box;
  }

  img {
    float: right;
    width: 50px;
    height: 50px;
    background: var(--white);
    border-radius: 33%; // This makes the image round
  }

  .info-block,
  .setting,
  .control-heading {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    gap: .5em;
  }

  .control-heading {
    flex-basis: 100%;
    margin-bottom: 0;
  }

  .information,
  .info-block,
  .setting {
    .header {
      font-size: var(--font-small);
      padding-bottom: 5px;
    }
    h2,
    &.no-title {
      border-top: 1px solid var(--border-color);
    }

    h2 {
      padding-top: .8rem;
      font-size: var(--font-large);
    }

    h3 {
      border-top: 1px dotted var(--border-color);
      padding-top: .8rem;
      font-size: var(--font-size);
      @include figtree-medium;
    }

    footer {
      flex-basis: 100%;
    }
  }

  .information {
    flex-grow: 2;
  }

  .setting {
    @include content-align-y;
    justify-content: space-between;

    .control {
      flex-basis: 100%;
      justify-content: flex-end;
    }
  }

  .control {
    display: flex;
    flex-direction: row;
    gap: .1em;
    align-items: center;
  }

  button.input,
  button.input-square,
  input[type="text"],
  input[type="email"] {
    box-sizing: border-box;
    border: 1px solid var(--border-color);
    border-radius: 5px;
    @include figtree-light;
    cursor: pointer;
    height: 30px;
  }

  button.input {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    @include figtree-medium;
  }

  button.input-square {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 30px;
    padding: 0;

    svg {
      width: 20px; // adjust as needed
      height: 20px; // adjust as needed
      flex-shrink: 0;
    }
  }

  textarea,
  input[type="text"],
  input[type="email"] {
    padding: 10px;
    min-width: 20em;
    background-color: var(--input-bg-color);
    color: var(--text-normal);
  }

  input[type="email"]:invalid {
    border-color: red; // Adjust as needed
  }

  textarea {
    position: relative;
    min-height: 15vh;
    width: 97%;
    border-width: 1px;
    border-radius: 6px;
    border-color: var(--border-color);
  }

  button[name="reset"] {
    background-color: var(--button-reset-bg);
    color: var(--button-reset-color);
  }

  input:disabled,
  button:disabled {
    pointer-events: none;
    background-color: var(--button-disabled-bg);
    color: var(--button-disabled-color);
  }

  input.error {
    border-color: var(--error); // Adjust as needed
  }

  .label {
    color: var(--accent);
    @include figtree-medium;

    &:after {
      content: ":";
    }
  }

  .tooltip {
    position: relative;
    display: inline-block;

    .tooltiptext {
      visibility: hidden;
      width: 200px;
      background-color: var(--border-color);
      color: var(--text-normal);
      padding: 5px;
      border-radius: 6px;

      position: absolute;
      z-index: 1;
      bottom: 125%;
      left: 0;
      margin-left: -150px;
      padding-left: 10px;

      opacity: 0;
      transition: opacity 0.3s;

      white-space: normal; /* Allow text to wrap */
      text-align: left;
    }

    &:hover .tooltiptext {
      visibility: visible;
      opacity: 1;
    }
  }

  .good-until {
    display: flex;
    flex-direction: row wrap;
    justify-content: space-between;
  }

  .ok,
  .required {
    @include figtree-light;
    font-size: var(--font-size);
  }

  .ok {
    color: var(--ok);
  }

  .required {
    color: var(--required);
  }

  code,
  footer,
  .modified {
    font-size: var(--font-smaller);
  }

  .prompt {
    font-size: var(--font-small);
  }

  #member-app {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .content {
    flex: 2 1 auto;
    min-height: calc(100vh - 15em);
  }

  .modified,
  footer.agreement-version {
    @include figtree-italic;
    text-align: right;
    color: var(--text-muted);

    a {
      color: var(--text-muted);
    }
  }

  footer.member-footer {
    @include margin-align-y;
    @include content-align-y;
    border-top: 1px solid var(--border-color);
    text-align: right;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: .5em;

    span {
      text-align: left;
      flex-grow: 2;
    }

    button[name="reset"] {
      color: var(--text-faint);
      border-color: transparent;
      background-color: transparent;
    }
  }

  @media (min-width: 500px) {
    .setting {
      .control {
        flex: 1 1 auto;

        button {
          white-space: nowrap;
          text-wrap: nowrap;
        }
      }

      .prompt {
        flex: 2 1 auto;
      }
    }
  }

  @media (min-width: 800px) {
    min-width: 800px;
  }
}